version: '3.8'

services:
  tester1:
    image: alpine:edge
    restart: always
    volumes:
      - foo:/foo
    command:
      - /bin/sh
      - '-c'
      - |
        while true
        do
          sleep 10
          date
        done | tee -a /foo/date

  db:
    image: mariadb:10.5
    restart: always
    volumes:
      - mariadb:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: db1

  tester2:
    image: mariadb:10.5
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: secret
    depends_on:
      - db
    command:
      - /bin/sh
      - '-c'
      - |
        while true
        do
          sleep 10
          date
          echo "CREATE TABLE IF NOT EXISTS events (d varchar(80)); INSERT INTO events (d) VALUES ((SELECT NOW()));" \
            | mysql -h db --user=root --password="$$MYSQL_ROOT_PASSWORD" --database=db1
        done

  archiver:
    environment:
      HOST: fake-host
      MYSQL_ROOT_PASSWORD: secret
      RESTIC_CONF: /root/restic.json
      RESTIC_REPOSITORY: /root/backup
      RESTIC_PASSWORD: password

    command:
      - /bin/sh
      - '-c'
      - |
        cat > /root/restic.json <<EOF
        {
          "virtual_volumes": [
            {
              "name": "tester2",
              "backup_cmd": "docker exec archiver_db_1 mysqldump --all-databases -uroot -p$$MYSQL_ROOT_PASSWORD",
              "restore_cmd": "docker exec -i archiver_db_1 mysql --user=root --password=$$MYSQL_ROOT_PASSWORD"
            },
            {
              "name": "tester2_tmp",
              "backup_cmd": "docker exec archiver_db_1 mysqldump --all-databases -uroot -p$$MYSQL_ROOT_PASSWORD",
              "restore_cmd": "docker exec -i archiver_db_1 mysql --user=root --password=$$MYSQL_ROOT_PASSWORD"
            }
          ]
        }
        EOF

        cat > /etc/cron/crontab <<EOF
        */2 * * * * * restic.mk backup-docker-volumes backup-virtual-volumes
        EOF

        /entrypoint.sh

volumes:
  foo:
  mariadb:
